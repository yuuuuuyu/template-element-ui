import{V as e}from"./ui.1d6f8af4.js";import{g as t}from"./util.65335530.js";import{n as r}from"./index.533ed093.js";const a=r({model:{prop:"value",event:"change"},props:{value:{type:Array,required:!1},valueKey:{type:String,required:!1,default:()=>t("valueKey","value")},labelKey:{type:String,required:!1,default:()=>t("labelKey","label")},nullAble:{type:Boolean,required:!1,default:()=>t("nullAble",!0)},request:{type:Function,required:!1},param:{type:String,required:!1,default:()=>t("param",void 0)},responseTransfer:{type:Function,required:!1,default:t=>e.$DictControl&&"function"==typeof e.$DictControl.responseTransfer?e.$DictControl.responseTransfer(t):t}},data:()=>({bindValue:[],list:[]}),watch:{value:{handler(){this.value&&(this.bindValue=this.value)},immediate:!0}},methods:{fetchData:async function(){if(!e.$DictControl&&!e.$DictControl.request&&!this.request)return console.warn("DictControl: The required configuration [request] is missing!");const t=this.request||e.$DictControl.request;if("function"!=typeof t)return console.warn("DictControl: [request] must be a Function!");this.list=this.responseTransfer(await t(this.param))}},created(){this.fetchData()}},(function(){var e=this;return(0,e._self._c)("el-cascader",e._b({attrs:{options:e.list,props:{value:this.valueKey,label:this.labelKey}},on:{change:function(t){return e.$emit("change",t)}},model:{value:e.bindValue,callback:function(t){e.bindValue=t},expression:"bindValue"}},"el-cascader",e.$attrs,!1))}),[],!1,null,"518ea0ab",null,null).exports;export{a as default};
